# Universal Security Configuration for All Templates
# Supports: Dependency scanning, SAST, container security, compliance

security:
  # Dependency vulnerability scanning
  dependencies:
    # Snyk configuration
    snyk:
      enabled: true
      severity_threshold: "medium"
      fail_on: "upgradable"
      monitor: true
      exclude_dev_dependencies: false
      
    # NPM Audit configuration  
    npm_audit:
      enabled: true
      audit_level: "moderate"
      production_only: false
      
    # Python safety check
    safety:
      enabled: true
      ignore_ids: []
      
    # Go security check
    gosec:
      enabled: true
      severity: "medium"
      
    # Rust security check
    cargo_audit:
      enabled: true
      deny_warnings: true

  # Static Application Security Testing (SAST)
  sast:
    # CodeQL configuration
    codeql:
      enabled: true
      languages: ["javascript", "typescript", "python", "go", "java"]
      queries: ["security-and-quality"]
      
    # Semgrep configuration
    semgrep:
      enabled: true
      config: "auto"
      rules:
        - "p/security-audit"
        - "p/secrets"
        - "p/owasp-top-ten"
        - "p/react"
        - "p/typescript"
        - "p/nodejs"
      exclude_patterns:
        - "*.test.*"
        - "*.spec.*"
        - "test/**"
        - "tests/**"
        - "__tests__/**"
        - "coverage/**"
        - "node_modules/**"
        
    # Bandit for Python
    bandit:
      enabled: true
      confidence_level: "medium"
      severity_level: "medium"
      
    # ESLint Security Plugin
    eslint_security:
      enabled: true
      rules:
        - "security/detect-object-injection"
        - "security/detect-non-literal-regexp"
        - "security/detect-unsafe-regex"
        - "security/detect-buffer-noassert"
        - "security/detect-child-process"
        - "security/detect-disable-mustache-escape"
        - "security/detect-eval-with-expression"
        - "security/detect-no-csrf-before-method-override"
        - "security/detect-non-literal-fs-filename"
        - "security/detect-non-literal-require"
        - "security/detect-possible-timing-attacks"
        - "security/detect-pseudoRandomBytes"

  # Secret scanning
  secrets:
    # GitLeaks configuration
    gitleaks:
      enabled: true
      config_path: ".gitleaks.toml"
      
    # TruffleHog configuration
    trufflehog:
      enabled: true
      entropy_threshold: 3.0
      
    # Custom secret patterns
    patterns:
      - name: "API Keys"
        pattern: '(?i)(api[_-]?key|apikey)\s*[:=]\s*["\']?[a-zA-Z0-9_-]{20,}["\']?'
      - name: "Database URLs"
        pattern: '(?i)(database[_-]?url|db[_-]?url)\s*[:=]\s*["\']?[a-zA-Z0-9_.-]+://[^\s"\']*["\']?'
      - name: "JWT Tokens"
        pattern: 'eyJ[A-Za-z0-9_-]*\.[A-Za-z0-9._-]*|eyJ[A-Za-z0-9_\/+-]*\.[A-Za-z0-9._\/+-]*'
      - name: "Private Keys"
        pattern: '-----BEGIN [A-Z ]*PRIVATE KEY-----'
      - name: "AWS Keys"
        pattern: 'AKIA[0-9A-Z]{16}'

  # Container security (for Docker-based templates)
  containers:
    # Trivy configuration
    trivy:
      enabled: true
      severity: "MEDIUM,HIGH,CRITICAL"
      vuln_type: "os,library"
      ignore_unfixed: true
      
    # Docker Scout
    docker_scout:
      enabled: true
      
    # Hadolint for Dockerfile linting
    hadolint:
      enabled: true
      ignore_rules: []

  # Infrastructure as Code security
  iac:
    # Checkov configuration
    checkov:
      enabled: true
      frameworks: ["terraform", "cloudformation", "kubernetes", "dockerfile"]
      skip_checks: []
      
    # TFSec for Terraform
    tfsec:
      enabled: true
      minimum_severity: "MEDIUM"

  # Web application security
  web:
    # OWASP ZAP configuration
    zap:
      enabled: true
      target_url: "http://localhost:3000"
      rules:
        - "10003" # Passive Scan Rules
        - "10109" # Modern Web Application
        - "90001" # Insecure JSF ViewState
      
    # Nuclei templates
    nuclei:
      enabled: true
      templates:
        - "cves"
        - "vulnerabilities" 
        - "exposed-panels"
        - "technologies"

  # Compliance frameworks
  compliance:
    # SOC 2 compliance checks
    soc2:
      enabled: false
      controls:
        - "access_control"
        - "encryption"
        - "logging"
        - "monitoring"
        
    # GDPR compliance checks
    gdpr:
      enabled: false
      checks:
        - "data_classification"
        - "consent_management"
        - "data_retention"
        - "breach_notification"
        
    # HIPAA compliance checks (for healthcare templates)
    hipaa:
      enabled: false
      controls:
        - "access_control"
        - "audit_controls"
        - "integrity"
        - "transmission_security"

  # Security policies
  policies:
    # Minimum security requirements
    requirements:
      dependency_scan: true
      secret_scan: true
      sast_scan: true
      container_scan: false # Enable for containerized applications
      
    # Failure thresholds
    thresholds:
      high_vulnerabilities: 0
      medium_vulnerabilities: 5
      low_vulnerabilities: 20
      secrets_found: 0
      
    # Allowed licenses (for dependency checking)
    allowed_licenses:
      - "MIT"
      - "Apache-2.0"
      - "BSD-2-Clause"
      - "BSD-3-Clause"
      - "ISC"
      - "0BSD"
      
    # Blocked packages/dependencies
    blocked_packages:
      npm:
        - "leftpad"
        - "event-stream@3.3.6"
      python:
        - "malicious-package"
      
  # Security testing automation
  automation:
    # Scheduled scans
    schedule:
      dependency_scan: "daily"
      secret_scan: "on_push"
      sast_scan: "on_pull_request"
      container_scan: "weekly"
      
    # Integration settings
    integrations:
      github_security_advisories: true
      snyk_monitor: true
      dependabot: true
      
    # Notifications
    notifications:
      slack_webhook: ""
      email_recipients: []
      security_team: "security@company.com"

  # Reporting configuration
  reporting:
    # Report formats
    formats:
      - "json"
      - "sarif"
      - "html"
      - "csv"
      
    # Report storage
    storage:
      local_path: "./security-reports"
      s3_bucket: ""
      
    # Dashboard integration
    dashboard:
      enabled: true
      url: "http://localhost:3001/security"
      
  # Environment-specific configurations
  environments:
    development:
      dependencies:
        snyk:
          severity_threshold: "high"
      sast:
        semgrep:
          config: "p/security-audit"
          
    staging:
      dependencies:
        snyk:
          severity_threshold: "medium"
      web:
        zap:
          enabled: true
          
    production:
      dependencies:
        snyk:
          severity_threshold: "low"
          fail_on: "any"
      compliance:
        soc2:
          enabled: true
        gdpr:
          enabled: true