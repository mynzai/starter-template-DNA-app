{
  "name": "{{projectName}}",
  "version": "1.0.0",
  "description": "High-performance API platform capable of 48k+ requests/second",
  "scripts": {
    "dev": "cargo run",
    "build": "cargo build --release",
    "test": "cargo test && npm run test:integration",
    "test:unit": "cargo test",
    "test:integration": "cargo test --test integration",
    "test:performance": "cargo bench",
    "test:load": "node scripts/load-test.js",
    "lint": "cargo clippy -- -D warnings",
    "format": "cargo fmt",
    "check": "cargo check",
    "doc": "cargo doc --open",
    "clean": "cargo clean",
    
    "docker:build": "docker build -t {{projectName}}:latest .",
    "docker:run": "docker run -p 3000:3000 {{projectName}}:latest",
    "docker:compose": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    
    "k8s:deploy": "kubectl apply -f k8s/",
    "k8s:delete": "kubectl delete -f k8s/",
    "k8s:logs": "kubectl logs -f deployment/{{projectName}}",
    
    "benchmark": "cargo bench --bench performance_benchmark",
    "benchmark:wrk": "wrk -t12 -c400 -d30s http://localhost:3000/health",
    "benchmark:artillery": "artillery run load-tests/artillery.yml",
    
    "generate:client:typescript": "node scripts/generate-client-typescript.js",
    "generate:client:dart": "node scripts/generate-client-dart.js",
    "generate:openapi": "node scripts/generate-openapi.js",
    
    "metrics:prometheus": "docker run -p 9090:9090 -v $(pwd)/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus",
    "metrics:grafana": "docker run -p 3001:3000 grafana/grafana",
    
    "db:migrate": "sqlx migrate run",
    "db:reset": "sqlx database reset",
    "db:setup": "sqlx database create && sqlx migrate run",
    
    "quality:check": "npm run lint && npm run test && npm run benchmark",
    "ci": "npm run format && npm run lint && npm run test && npm run build"
  },
  "keywords": [
    "api",
    "axum",
    "rust",
    "performance",
    "graphql",
    "rest",
    "microservice",
    "scalable",
    "monitoring"
  ],
  "author": "{{author}}",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/{{organization}}/{{projectName}}.git"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "typescript": "^5.0.0",
    "ts-node": "^10.9.0",
    "artillery": "^2.0.0",
    "autocannon": "^7.12.0",
    "@openapi-generator-cli/cli": "^2.7.0",
    "swagger-codegen": "^0.1.1",
    "quicktype": "^23.0.0"
  },
  "dependencies": {
    "axios": "^1.5.0",
    "redis": "^4.6.0",
    "pg": "^8.11.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "performance": {
    "target_rps": 48000,
    "max_response_time_ms": 50,
    "max_memory_mb": 512,
    "max_cpu_percentage": 80
  },
  "monitoring": {
    "prometheus_port": 9090,
    "grafana_port": 3001,
    "health_check_port": 8080,
    "metrics_collection_interval": "15s"
  },
  "infrastructure": {
    "docker": {
      "base_image": "rust:1.75-slim",
      "exposed_ports": [3000, 8080, 9090]
    },
    "kubernetes": {
      "min_replicas": 2,
      "max_replicas": 20,
      "target_cpu_utilization": 70,
      "target_memory_utilization": 80
    },
    "database": {
      "type": "postgresql",
      "min_connections": 5,
      "max_connections": 100,
      "connection_timeout": "30s"
    },
    "redis": {
      "max_connections": 50,
      "connection_timeout": "30s"
    }
  },
  "client_generation": {
    "typescript": {
      "output_dir": "clients/typescript",
      "package_name": "{{projectName}}-client",
      "include_types": true
    },
    "dart": {
      "output_dir": "clients/dart",
      "package_name": "{{projectName}}_client",
      "include_types": true
    }
  }
}